<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:MiniTwitter="clr-namespace:MiniTwitter" xmlns:MiniTwitter_Controls="clr-namespace:MiniTwitter.Controls"
    xmlns:MiniTwitter_Properties="clr-namespace:MiniTwitter.Properties"
    xmlns:MiniTwitter_Themes="clr-namespace:MiniTwitter.Themes"
    xmlns:System_Deployment_Application="clr-namespace:System.Deployment.Application;assembly=System.Deployment" xmlns:Views="clr-namespace:MiniTwitter.Views" xmlns:Input="clr-namespace:MiniTwitter.Models.Input" x:Class="MiniTwitter.Views.SettingDialog"
    Title="MiniTwitter: 設定" Height="450" Width="550" ShowInTaskbar="False" FontFamily="{Binding Path=FontName, Source={x:Static MiniTwitter_Properties:Settings.Default}, FallbackValue=Meiryo}"
    ResizeMode="NoResize" WindowStartupLocation="CenterOwner" Loaded="SettingDialog_Loaded"
    DataContext="{x:Static MiniTwitter_Properties:Settings.Default}" Style="{DynamicResource SettingDialogStyle}"
    TextOptions.TextFormattingMode="Display" UseLayoutRounding="True">
    <Window.BindingGroup>
        <BindingGroup/>
    </Window.BindingGroup>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListBox Grid.Column="0" Grid.Row="0" Width="145" IsSynchronizedWithCurrentItem="True" Style="{DynamicResource CategoryListBoxStyle}" ItemContainerStyle="{DynamicResource CategoryListBoxItemStyle}">
            <ListBoxItem x:Name="AccountListBoxItem" IsSelected="True">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource AccountImageStyle}"/>
                    <TextBlock Text="アカウント" Margin="4,0,0,0"/>
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="NetworkListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource NetworkImageStyle}"/>
                    <TextBlock Text="ネットワーク" Margin="4,0,0,0"/>
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="RefreshListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource ArrowRefreshImageStyle}"/>
                    <TextBlock Text="更新" Margin="4,0,0,0"/>
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="PopupListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource PopupImageStyle}"/>
                    <TextBlock Text="ポップアップ" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="DesignListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource DesignImageStyle}"/>
                    <TextBlock Text="デザイン" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="KeyboardListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource KeyboardImageStyle}"/>
                    <TextBlock Text="キーボード" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="SoundListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource SoundImageStyle}"/>
                    <TextBlock Text="サウンド" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="KeywordListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource KeywordImageStyle}"/>
                    <TextBlock Text="キーワード" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="AddInListBoxItem" Visibility="Collapsed">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource AddInImageStyle}"/>
                    <TextBlock Text="アドイン" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="OtherListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource SettingImageStyle}"/>
                    <TextBlock Text="その他" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem x:Name="VersionListBoxItem">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{DynamicResource SettingImageStyle}"/>
                    <TextBlock Text="バージョン情報" Margin="4,0,0,0" />
                </StackPanel>
            </ListBoxItem>
        </ListBox>
        <StackPanel Grid.Column="2" Grid.Row="1" Margin="0,10,0,0" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Content="OK" Width="90" Margin="0,0,5,0" IsDefault="True" Click="OkButton_Click"/>
            <Button Content="キャンセル" Width="90" IsCancel="True" Click="CancelButton_Click"/>
        </StackPanel>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=AccountListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="ユーザー名" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="17"/>
            <TextBlock Text="パスワード" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="45"/>
            <TextBox Width="200" InputMethod.IsInputMethodEnabled="False" Canvas.Left="110" Canvas.Top="14" Text="{Binding Path=Username}"/>
            <PasswordBox x:Name="PasswordBox" Width="200" Canvas.Left="110" Canvas.Top="42"/>
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=NetworkListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CheckBox x:Name="UseProxyCheckBox" Content="プロキシサーバを使用する" Canvas.Left="14" Canvas.Top="14" IsChecked="{Binding Path=UseProxy}"/>
            <CheckBox x:Name="UseIEProxyCheckBox" Content="Internet Explorer の設定を使用する" Canvas.Left="14" Canvas.Top="36" IsChecked="{Binding Path=UseIEProxy}" IsEnabled="{Binding Path=IsChecked, ElementName=UseProxyCheckBox}"/>
            <TextBlock Text="サーバアドレス" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="74"/>
            <TextBlock Text="ポート番号" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="102"/>
            <TextBlock Text="ユーザー名" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="130"/>
            <TextBlock Text="パスワード" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="158"/>
            <TextBox Width="200" Canvas.Left="120" Canvas.Top="71" Text="{Binding Path=ProxyAddress}" IsEnabled="{Binding Path=IsChecked, ElementName=UseProxyCheckBox}"/>
            <TextBox Width="70" Canvas.Left="120" Canvas.Top="99" Text="{Binding Path=ProxyPortNumber}" IsEnabled="{Binding Path=IsChecked, ElementName=UseProxyCheckBox}"/>
            <TextBox Width="200" Canvas.Left="120" Canvas.Top="127" Text="{Binding Path=ProxyUsername}" IsEnabled="{Binding Path=IsChecked, ElementName=UseProxyCheckBox}"/>
            <PasswordBox x:Name="ProxyPasswordBox" Width="200" Canvas.Left="120" Canvas.Top="155" IsEnabled="{Binding Path=IsChecked, ElementName=UseProxyCheckBox}"/>
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=RefreshListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CheckBox x:Name="AutoRefreshCheckBox" Content="自動更新を有効にする" Canvas.Left="14" Canvas.Top="14" IsChecked="{Binding Path=EnableAutoRefresh}"/>
            <TextBlock Text="フレンドタイムライン更新の間隔" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="42"/>
            <Slider x:Name="RefreshSlider" Width="270" Canvas.Left="31" Canvas.Top="66" Maximum="120" Minimum="15" TickFrequency="5" SmallChange="5" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Value="{Binding Path=RefreshTick}" IsEnabled="{Binding Path=IsChecked, ElementName=AutoRefreshCheckBox}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="66" Text="{Binding Path=Value, ElementName=RefreshSlider, StringFormat=\{0\} 秒}"/>
            <TextBlock Text="返信タイムライン更新の間隔" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="105"/>
            <Slider x:Name="RefreshReplySlider" Width="270" IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="BottomRight" Maximum="20" Minimum="1" SmallChange="1" Canvas.Left="31" Canvas.Top="129" Value="{Binding Path=RefreshReplyTick}" IsEnabled="{Binding Path=IsChecked, ElementName=AutoRefreshCheckBox}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="129" Text="{Binding Path=Value, ElementName=RefreshReplySlider, StringFormat=\{0\} 分}"/>
            <TextBlock Text="ダイレクトメッセージ更新の間隔" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="168"/>
            <Slider x:Name="RefreshMessageSlider" Width="270" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Maximum="30" Minimum="1" SmallChange="1" Canvas.Left="31" Canvas.Top="192" Value="{Binding Path=RefreshMessageTick}" IsEnabled="{Binding Path=IsChecked, ElementName=AutoRefreshCheckBox}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="192" Text="{Binding Path=Value, ElementName=RefreshMessageSlider, StringFormat=\{0\} 分}"/>
            <TextBlock Text="リスト更新の間隔" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="231"/>
            <Slider x:Name="RefreshListSlider" Width="270" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Maximum="30" Minimum="1" SmallChange="1" Canvas.Left="31" Canvas.Top="255" Value="{Binding Path=RefreshListTick}" IsEnabled="{Binding Path=IsChecked, ElementName=AutoRefreshCheckBox}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="255" Text="{Binding Path=Value, ElementName=RefreshListSlider, StringFormat=\{0\} 分}"/>
            <TextBlock Text="検索タイムライン更新の間隔" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="294"/>
            <Slider x:Name="RefreshSearchSlider" Width="270" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Maximum="30" Minimum="1" SmallChange="1" Canvas.Left="31" Canvas.Top="318" Value="{Binding Path=RefreshSearchTick}" IsEnabled="{Binding Path=IsChecked, ElementName=AutoRefreshCheckBox}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="318" Text="{Binding Path=Value, ElementName=RefreshSearchSlider, StringFormat=\{0\} 分}"/>
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=PopupListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CheckBox x:Name="PopupCheckBox" Content="新着項目をポップアップ表示する" Canvas.Left="14" Canvas.Top="14" IsChecked="{Binding Path=EnablePopup}"/>
            <CheckBox Content="非アクティブ時のみポップアップを表示する" Canvas.Left="31" Canvas.Top="44" IsEnabled="{Binding Path=IsChecked, ElementName=PopupCheckBox}" IsChecked="{Binding Path=PopupOnlyNotActive}"/>
            <CheckBox Content="お気に入りワードを含む項目だけ表示する" Canvas.Left="31" Canvas.Top="66" IsEnabled="{Binding Path=IsChecked, ElementName=PopupCheckBox}" IsChecked="{Binding Path=PopupOnlyFavorite}"/>
            <TextBlock Text="ポップアップを表示する時間" TextWrapping="Wrap" Canvas.Left="31" Canvas.Top="93"/>
            <Slider x:Name="PopupCloseTickSlider" Width="270" Canvas.Left="31" Canvas.Top="117" IsSnapToTickEnabled="True" TickFrequency="5" TickPlacement="BottomRight" LargeChange="5" Maximum="90" Minimum="5" SmallChange="5" IsEnabled="{Binding Path=IsChecked, ElementName=PopupCheckBox}" Value="{Binding Path=PopupCloseTick}"/>
            <TextBlock TextAlignment="Right" Canvas.Right="20" Canvas.Top="117" Text="{Binding Path=Value, ElementName=PopupCloseTickSlider, StringFormat=\{0\} 秒}"/>
            <TextBlock Text="表示する位置" Canvas.Left="31" Canvas.Top="151"/>
            <ComboBox Width="180" Canvas.Left="150" Canvas.Top="173" SelectedItem="{Binding Path=PopupLocation}" ItemsSource="{x:Static Views:SettingDialog.Locations}" />
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=DesignListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="17"><Run Text="テーマ"/></TextBlock>
            <ComboBox Width="220" IsSynchronizedWithCurrentItem="True" Canvas.Left="110" Canvas.Top="14" ItemsSource="{x:Static MiniTwitter_Themes:ThemeManager.Themes}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding Path=Theme}" />
            <TextBlock Text="フォント" Canvas.Left="14" Canvas.Top="62"/>
            <ComboBox Width="180" Canvas.Left="110" Canvas.Top="59" ItemsSource="{x:Static Fonts.SystemFontFamilies}" DisplayMemberPath="Source" SelectedValuePath="Source" SelectedValue="{Binding Path=FontName}" />
            <CheckBox Content="ClearType を強制的に ON にする" Canvas.Left="20" Canvas.Top="95" IsChecked="{Binding Path=IsClearTypeEnabled}" />
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=KeyboardListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="キーボード マップ スキームを適用" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="17"/>
            <ComboBox x:Name="KeyMappingComboBox" Width="260" IsSynchronizedWithCurrentItem="True" Canvas.Left="14"
                      Canvas.Top="42" DisplayMemberPath="Key" SelectedValuePath="Value" SelectionChanged="KeyMappingComboBox_SelectionChanged"
                      ItemsSource="{x:Static Input:KeyMapping.KeyMappings}"/>
            <Button Width="80" Content="リセット" Canvas.Left="278" Canvas.Top="42" Click="ResetKeyMappingButton_Click"/>
            <TextBlock Text="コマンド" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="98"/>
            <ComboBox x:Name="CommandComboBox" Width="224" IsSynchronizedWithCurrentItem="True" Canvas.Left="134" Canvas.Top="96"
                      DisplayMemberPath="Action"/>
            <TextBlock Text="使用する場所" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="128"/>
            <ComboBox x:Name="ActionSpotComboBox" Width="140" IsSynchronizedWithCurrentItem="True" Canvas.Left="134" Canvas.Top="126"
                      SelectedValuePath="Tag" SelectedValue="{Binding Path=SelectedItem.ActionSpot, ElementName=CommandComboBox}">
                <ComboBoxItem Content="全体" Tag="{x:Static Input:KeyActionSpot.All}"/>
                <ComboBoxItem Content="ステータスエディタ" Tag="{x:Static Input:KeyActionSpot.TweetTextBox}"/>
                <ComboBoxItem Content="タイムライン" Tag="{x:Static Input:KeyActionSpot.Timeline}"/>
                <ComboBoxItem Content="グローバル" Tag="{x:Static Input:KeyActionSpot.Global}"/>
            </ComboBox>
            <TextBlock Text="ショートカットキー" TextWrapping="Wrap" Canvas.Left="14" Canvas.Top="158"/>
            <MiniTwitter_Controls:ShortcutKeyBox x:Name="ShortcutKeyBox" Width="140" Canvas.Left="134" Canvas.Top="156"
                                                 Key="{Binding Path=SelectedItem.Key, ElementName=CommandComboBox, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                 ModifierKeys="{Binding Path=SelectedItem.ModifierKeys, ElementName=CommandComboBox, Mode=TwoWay, UpdateSourceTrigger=Explicit}"/>
            <Button Content="削除" Width="80" Canvas.Left="278" Canvas.Top="126" Click="DeleteKeyButton_Click"/>
            <Button Content="割り当て" Width="80" Canvas.Left="278" Canvas.Top="156" Click="AssignKeyButton_Click"/>
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=SoundListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListView x:Name="SoundListView" Width="347" Height="328" IsSynchronizedWithCurrentItem="True" SelectedIndex="0"
                      VerticalContentAlignment="Center" Canvas.Left="14" Canvas.Top="14">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Header="アクション" Width="180">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding Path=IsEnabled}" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding Path=Action}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="ファイル名" Width="300" DisplayMemberBinding="{Binding Path=FileName}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Button Content="再生" Width="75" Canvas.Left="207" Canvas.Top="346" Click="PlaySoundButton_Click" />
            <Button Content="参照" Width="75" Canvas.Left="286" Canvas.Top="346" Click="BrowseSoundButton_Click"/>
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=KeywordListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListView x:Name="KeywordListView" Width="347" Height="328" IsSynchronizedWithCurrentItem="True" SelectedIndex="0"
                      VerticalContentAlignment="Center" Canvas.Left="14" Canvas.Top="14">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Header="キーワード" Width="200">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding Path=IsEnabled}" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding Path=Keyword}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="動作" Width="120">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox SelectedValue="{Binding Path=Action}" ItemsSource="{x:Static Views:SettingDialog.KeywordActions}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <TextBox x:Name="KeywordTextBox" Width="188" TextWrapping="Wrap" Canvas.Left="15" Canvas.Top="346"/>
            <Button Content="追加" Width="75" Canvas.Left="207" Canvas.Top="346" Click="AddKeywordButton_Click" />
            <Button Content="削除" Width="75" Canvas.Left="286" Canvas.Top="346" Click="DeleteKeywordButton_Click" />
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=AddInListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=OtherListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CheckBox Content="未読管理を有効にする" Canvas.Left="14" Canvas.Top="14" IsChecked="{Binding Path=EnableUnreadManager}"/>
            <CheckBox x:Name="TweetFooterCheckBox" Content="メッセージフッタを付加する" Canvas.Left="14" Canvas.Top="36" IsChecked="{Binding Path=EnableTweetFooter}"/>
            <TextBlock Text="メッセージフッタ" Canvas.Left="31" Canvas.Top="62"/>
            <ComboBox x:Name="TweetFooterComboBox" Width="180" Canvas.Left="150" Canvas.Top="59" IsEditable="True" Text="{Binding Path=TweetFooter}" IsEnabled="{Binding ElementName=TweetFooterCheckBox, Path=IsChecked}"/>
            <CheckBox Content="閉じられたときに通知領域で常駐する" Canvas.Left="14" Canvas.Top="89" IsChecked="{Binding Path=EnableNotifyIcon}"/>
            <CheckBox Content="コメント付き RT 時に in-reply-to を付加する" Canvas.Left="14" Canvas.Top="111" IsChecked="{Binding Path=IsRetweetWithInReplyTo}" />
            <CheckBox Content="リアルタイム更新を有効にする（要再起動）" Canvas.Left="14" Canvas.Top="133" IsChecked="{Binding Path=UseUserStream}" />
        </Canvas>
        <Canvas Grid.Column="2" Grid.Row="0" Visibility="{Binding Path=IsSelected, ElementName=VersionListBoxItem, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Image Canvas.Left="70" Canvas.Top="30" Source="Resources\MiniTwitter.ico" Width="48" />
            <TextBlock Canvas.Left="130" Canvas.Top="40" Text="{x:Static MiniTwitter:App.NAME}" FontSize="22" />
            <StackPanel Orientation="Horizontal" Canvas.Left="100" Canvas.Top="90">
                <TextBlock Text="Version " FontSize="22" />
                <TextBlock Text="{x:Static MiniTwitter:App.VERSION}" FontSize="22" />
            </StackPanel>
            <Button Click="UpdateCheckButton_Click" Canvas.Left="120" Canvas.Top="150" IsEnabled="{Binding Source={x:Static System_Deployment_Application:ApplicationDeployment.IsNetworkDeployed}}">更新をチェックする</Button>
        </Canvas>
    </Grid>
</Window>
